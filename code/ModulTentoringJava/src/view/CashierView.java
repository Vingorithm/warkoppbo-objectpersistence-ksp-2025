/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProductController;
import controller.TransactionController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import model.Product;
import model.PurchaseItemDto;

/**
 *
 * @author Kevin Philips Tanamas
 */
public class CashierView extends javax.swing.JFrame {
    private final ProductController productController = new ProductController();
    private final TransactionController transactionController = new TransactionController();
    
    Product selectedProduct = null;
    List<Product> products;
    List<PurchaseItemDto> purchaseItemDtos = new ArrayList<>();
    
    public CashierView() {
        initComponents();
        setComponent(false);
        reloadTables();
    }
    
   public void setComponent(boolean value){
        inputQuantity.setEnabled(value);
        inputPembeli.setEnabled(value);
        buttonAddChart.setEnabled(value);
        buttonClearChart.setEnabled(false);
        buttonConfirm.setEnabled(false);
   }
   
    public TableProductView mapToTableProduct(String query) {
        // Ambil semua produk dari controller berdasarkan query
        List<Product> allProducts = productController.read(query);
        List<Product> filteredProducts = new ArrayList<>();

        for (Product p : allProducts) {
            if (p.getStock() > 0) {
                filteredProducts.add(p);
            }
        }
        this.products = filteredProducts;
        if (this.products.isEmpty()) {
            System.out.println("Product Kosong");
        }
        return new TableProductView(this.products);
    }

    public ShoppingCartView mapToShoppingChart() {
        return new ShoppingCartView(this.purchaseItemDtos);
    }

    public void reloadTables() {
        productTable.setModel(mapToTableProduct(""));
        tableChart.setModel(mapToShoppingChart());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stockButton = new javax.swing.JButton();
        tableScrollPanel = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        labelNamaProduk = new javax.swing.JLabel();
        inputQuantity = new javax.swing.JTextField();
        buttonAddChart = new javax.swing.JButton();
        scrollPanelChart = new javax.swing.JScrollPane();
        tableChart = new javax.swing.JTable();
        buttonConfirm = new javax.swing.JButton();
        buttonClearChart = new javax.swing.JButton();
        inputPembeli = new javax.swing.JTextField();
        labelNamaPembeli = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        background.setBackground(new java.awt.Color(204, 204, 204));
        background.setPreferredSize(new java.awt.Dimension(1004, 836));

        header.setBackground(new java.awt.Color(255, 153, 51));
        header.setPreferredSize(new java.awt.Dimension(1000, 100));

        jLabel1.setFont(new java.awt.Font("Perpetua", 1, 48)); // NOI18N
        jLabel1.setText("Warkop PBO");

        stockButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        stockButton.setText("Product");
        stockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addGap(363, 363, 363)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 258, Short.MAX_VALUE)
                .addComponent(stockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stockButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25))
        );

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        tableScrollPanel.setViewportView(productTable);

        labelNamaProduk.setBackground(new java.awt.Color(0, 0, 0));
        labelNamaProduk.setText("Nama Produk");

        buttonAddChart.setText("Tambah ke Keranjang");
        buttonAddChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddChartActionPerformed(evt);
            }
        });

        tableChart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPanelChart.setViewportView(tableChart);

        buttonConfirm.setText("Konfirmasi Transaksi");
        buttonConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmActionPerformed(evt);
            }
        });

        buttonClearChart.setText("Kosongkan Keranjang");
        buttonClearChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearChartActionPerformed(evt);
            }
        });

        inputPembeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputPembeliActionPerformed(evt);
            }
        });

        labelNamaPembeli.setBackground(new java.awt.Color(0, 0, 0));
        labelNamaPembeli.setText("Nama Pembeli");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tableScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(scrollPanelChart, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(backgroundLayout.createSequentialGroup()
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelNamaProduk)
                                    .addComponent(labelNamaPembeli))
                                .addGap(41, 41, 41)
                                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(backgroundLayout.createSequentialGroup()
                                        .addComponent(inputQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(buttonAddChart, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(inputPembeli))))
                        .addGap(18, 18, 18)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(buttonConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(buttonClearChart, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))))
                .addGap(34, 34, 34))
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tableScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNamaProduk)
                    .addComponent(inputQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonAddChart))
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(buttonConfirm))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(inputPembeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNamaPembeli))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonClearChart)
                    .addComponent(scrollPanelChart, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void stockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stockButtonActionPerformed
        // TODO add your handling code here:
        ProductView pv = new ProductView();
        this.dispose();
        pv.setVisible(true);
    }//GEN-LAST:event_stockButtonActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        // TODO add your handling code here:
        inputQuantity.setText("");
        setComponent(true);

        // Mendapatkan indeks baris yang diklik oleh pengguna pada tabel produk.
        int clickedRow = productTable.getSelectedRow();
        System.out.println("click row: " + clickedRow);
        System.out.println("Products List: " + products);

        if (products == null || products.isEmpty()) {
            // Menampilkan pesan dialog kepada pengguna jika produk tidak ditemukan atau kosong.
            JOptionPane.showMessageDialog(this, "Produk tidak ditemukan atau kosong.");
            return;
        }

        // Mengambil produk yang dipilih berdasarkan indeks baris yang diklik pengguna.
        selectedProduct = products.get(clickedRow);
        System.out.println("selected product: " + selectedProduct);

        // Menampilkan nama produk yang dipilih pada label
        labelNamaProduk.setText(selectedProduct.getName());
    }//GEN-LAST:event_productTableMouseClicked

    private void buttonAddChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddChartActionPerformed
        // TODO add your handling code here:
         buttonConfirm.setEnabled(true);
         buttonClearChart.setEnabled(true);

         // Membuat objek `PurchaseItemDto` berdasarkan produk yang dipilih dan jumlah yang dimasukkan pengguna.
         // `inputQuantity.getText()` mengambil jumlah yang diinput oleh pengguna, dan diubah menjadi integer.
         PurchaseItemDto purchaseItemDto = new PurchaseItemDto(selectedProduct, Integer.valueOf(inputQuantity.getText()));
         purchaseItemDtos.add(purchaseItemDto);

         System.out.println("Items in cart: " + purchaseItemDtos.size());
         System.out.println("Last added item: " + purchaseItemDto.getProduct().getName());

         // Memperbarui tabel di UI untuk mencerminkan perubahan pada data.
         reloadTables();
    }//GEN-LAST:event_buttonAddChartActionPerformed

    private void buttonConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmActionPerformed
       String total = transactionController.create(purchaseItemDtos, inputPembeli.getText());
       purchaseItemDtos.clear();
       reloadTables();
       JOptionPane.showMessageDialog(
           null,
           "Transaksi Berhasil! Total Transaksi: " + total + "\nNama Pembeli: " + inputPembeli.getText(),
           "Success",
           JOptionPane.INFORMATION_MESSAGE
       );
       inputPembeli.setEnabled(false);
       inputQuantity.setEnabled(false);
       buttonAddChart.setEnabled(false);
       buttonConfirm.setEnabled(false);
       buttonClearChart.setEnabled(false);
    }//GEN-LAST:event_buttonConfirmActionPerformed

    private void buttonClearChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearChartActionPerformed
        // TODO add your handling code here:
        buttonConfirm.setEnabled(false);
        buttonClearChart.setEnabled(false);
        purchaseItemDtos.clear();
        reloadTables();
    }//GEN-LAST:event_buttonClearChartActionPerformed

    private void inputPembeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputPembeliActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_inputPembeliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CashierView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CashierView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton buttonAddChart;
    private javax.swing.JButton buttonClearChart;
    private javax.swing.JButton buttonConfirm;
    private javax.swing.JPanel header;
    private javax.swing.JTextField inputPembeli;
    private javax.swing.JTextField inputQuantity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel labelNamaPembeli;
    private javax.swing.JLabel labelNamaProduk;
    private javax.swing.JTable productTable;
    private javax.swing.JScrollPane scrollPanelChart;
    private javax.swing.JButton stockButton;
    private javax.swing.JTable tableChart;
    private javax.swing.JScrollPane tableScrollPanel;
    // End of variables declaration//GEN-END:variables
}
